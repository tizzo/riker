#! /usr/bin/env node
'use strict';

var Riker = require('../..');
var Command = Riker.Command;

var command = new Command();

class Foo extends Command {
  constructor() {
    super();
    this.shortdescription = 'short description placeholder.';
    this.help = 'help placeholder';
    //this.input.pipe(this.output);
  }
  initialize() {
    this.yargs.describe('page', 'how many pages are there?');
  }
  run(done) {
    console.log('i was run!');
    if (done) done();
  }
}

class Bar extends Command {
  constructor() {
    super();
    this.shortdescription = 'short description placeholder.';
    this.help = 'help placeholder';
    //this.input.pipe(this.output);
  }
  initialize() {
    console.log('initing');
    this.yargs.describe('ping-pong', 'how pings can we pong?');
  }
  run(done) {
    console.log('i was run!');
    if (done) done();
  }
}

var riker = new Riker();
riker.addSubCommand('foo', new Bar());
riker.addSubCommand('bar', new Foo());
var baz = new Command();
baz.shortDescription = 'This is baz.';
baz.help = 'Baz knows about stuffâ€¦';
baz.addSubCommand('bong', new Bar());
riker.addSubCommand('baz', baz);
riker.addSubCommand('help', new Riker.commands.Help());
riker.run(function() {
  //console.log('command line run done');
});
